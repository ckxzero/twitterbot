/* Build database of wanted tweets */
var tweetDatabase = []; // Holds tweets of interest
tweetDatabase = buildTweetDatabase();
function buildTweetDatabase(){
    var database = [];
    // Code here to build database
    return database;
}

/* Search and retrieve tweets from Twitter with keywords */
var incomingTweets = []; // holds searched results
incomingTweets = logTweets("test"); // Example with "test" as the keyword
function logTweets(keywords){
    var tweets = [];
    // Communicate with Twitter
    // Apply filtering algorithm
    while(/* there are still results from search */){
	tweets.push(x); // x is an element of results
    }
    return tweets;
}

/* Find relevant tweets by comparing incomingTweets with our tweetDatabase */
var relevantTweets = compareTweets(incomingTweets);
function compareTweets(incomingTweets){
    var count; // counts the number of relevant tweets
    // runtime = O(N * M) where N = incomingTweets.length and M = tweetDatabase.length
    for(var i = 0; i < incomingTweets.length; ++i){
	for(var j = 0; j < tweetDatabase.length; ++j){
	    if(/* incomingTweet[i] is relevant to tweetDatabase[j] */){
		count++;
		break;
	    }
	}
    }
    return count;
}

/* Calculate efficiency of my code */
var efficiency = {};
efficiency = calcPrecisionAndRecall(relevantTweets, incomingTweets.length; tweetDatabase.length);
function calcPrecisionAndRecall(relevantTweets, totalIncomingTweets, totalDatabaseTweets){
    var precision = relavantTweets / totalIncomingTweets;
    var recall = relevantTweets / totalDatabaseTweets; 
    return {precision: precision, recall: recall};
}

// output answer
console.log(efficiency);

